#include <iostream>
#include <fstream>	// библиотека для работы с файлами
#include <stdlib.h>

using namespace std;



void sort(int A[], int n);

int main()
{
	setlocale(LC_ALL, "");
	string file_path = "numbers.txt";

	ifstream inFile;
	inFile.open(file_path);
	if (inFile.fail()) {
		cerr << "Error opeing a file" << endl;
		inFile.close();
		exit(1);
	}


	

	ifstream f; // открываем файл numbers.txt для подсчета чисел
	f.open(file_path);

	int n = 0; // счетчик количества считанных из файла чисел
	int* A; // массив, в котором будут все считанные числа
	int x = 1;
	cout << f.is_open();

	if (!f) {
		while (f >> x) { // считывем из файла очередное число
			if (x != 0) // если это число не равно нулю
			{
				cout << x;
				n++; // увеличиваем счетчик на 1
			}
		}
		f.close(); // закрываем файл
	}
	else {
		return -1;
	}
	

	A = new int[n]; // создаем массив на подсчитанное число элементов (n)

	ifstream ff(file_path); // открываем файл numbers.txt для записи чисел в массив
	for (int i = 0; i < n; i++) {  // считаем от 0 до n-1
		ff >> A[i]; // записываем очередное число в массив
	}

	ff.close();	// закрываем файл

	sort(A, n); // сортируем массив по возрастанию

	cout << "1. Считанные из файла отсортированные по возрастанию числа, не равные 0: ";
	
	for (int i = 0; i < n; i++) // выводим массив на экран
		cout << A[i] << " ";
	cout << endl;



	///// ============ начало второй программы

	cout << endl;
	int a, b;
	cout << "2. Массив будет заполнен случайными числами из интервала [a,b]" << endl;
	cout << "a = ";
	cin >> a;
	cout << "b = ";
	cin >> b;

	for (int i = 0; i < n; i++)
		A[i] = rand() % (b - a + 1) + a; // генерируем случайное число из интервала [a,b] и записываем в массив

	for (int i = 0; i < n; i++) // выводим массив на экран
		cout << A[i] << " ";
	cout << endl;

	int k;
	cout << "Массив будет сжат после удаления всех чисел, больших чем k" << endl;
	cout << "k = ";
	cin >> k;

	int nk = 0; // счетчик чисел, не больших чем k (тех, которые удалять не нужно)
	for (int i = 0; i < n; i++)
		if (A[i] <= k) nk++;  // если следующее число в массиве не больше чем k, увеличиваем счетчик

	int* C = new int[nk]; // выделяем память для сжатого массива (там должно быть nk элементов)
	for (int i = 0, j = 0; i < n; i++) // проходим по всем числам в массиве A
		if (A[i] <= k) {		// если следующее число в массиве не больше чем k
			C[j] = A[i];	// копируем его в новую память
			j++;			// увеличиваем счетчик элементов в новой памяти
		}

	delete[] A; // освобождаем старую память, в которой содержатся удаляемые элементы
	A = C; // массиву A назначаем новую выделенную память (в которой нет элементов, больших чем k)

	cout << "Массив после сжатия: " << endl;
	for (int i = 0; i < nk; i++) // выводим массив на экран 
		cout << A[i] << " ";
	if (nk == 0) cout << "пусто"; // написать "пусто", если в массиве нет элементов

	return 0;
}

// определение функции сортировки (сортировка прямого включения)
void sort(int A[], int n)
{
	for (int i = 1; i < n; i++) // для каждого элемента массива (кроме нулевого) по порядку
	{
		int t = A[i]; // сохраняем элемент в t
		int j = i; // текущий номер = номеру выбранного элемента
		while ((j > 0) && (A[j - 1] > t)) // пока текущий номер больше нуля и текущий элемент больше сохраненного
		{
			A[j] = A[j - 1]; // на место текущего элемента записываем элемент слева от него (предыдущий)
			j--; // текущий номер уменьшаем на 1 (элемент стоящий слева становится текущим)
		}
		A[j] = t; // после всех сдвигов в образовавшееся место ставим сохраненный в начале элемент
	}
}